name: (Generic) Nuitka

on:
  workflow_dispatch:
    inputs:
      REPO:
        description: Repository name
        type: string
        required: true

      MAIN_PY:
        description: Python main filename
        type: string
        required: true
        default: main.py

      STEM:
        description: Project stem (short name)
        type: string
        required: true

      NO_WINDOWS:
        description: No Windows EXE
        type: boolean
        required: true
        default: false

jobs:
  build-binaries:
    name: Build blobs
    strategy:
      matrix:
        os: [ubuntu-20.04,windows-2019 ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check if on Windows
        if: ${{ contains(matrix.os,'windows') == true && inputs.NO_WINDOWS == true }}
        run: exit 1

      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.REPO }}
          ref: main
          token: ${{ secrets.GH_TOKEN }}
          path: source-code
          sparse-checkout: .

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9.6"

      - name: Setup Python (req.txt)
        if: ${{ hashFiles('req.txt') != '' }}
        working-directory: source-code
        run: pip install -r req.txt

      - name: Setup Python (install Nuitka)
        run: |
          pip install nuitka
          mkdir out

      - name: Create a Linux binary
        if: ${{ contains(matrix.os,'windows') == false }}
        working-directory: source-code
        run: |
          python -m nuitka --verbose --onefile "${{ inputs.MAIN_PY }}" --output-dir==../out/ --output-filename=="${{ inputs.STEM }}.${{ matrix.os }}"
          find ../out

      - name: Create a Windows executable
        if: ${{ contains(matrix.os,'windows') == true }}
        working-directory: source-code
        run: |
          python -m nuitka --verbose --onefile "${{ inputs.MAIN_PY }}" --output-dir==../out/ --output-filename=="${{ inputs.STEM }}.${{ matrix.os }}.exe"
          ls ../out

      - uses: actions/upload-artifact@v3
        with:
          name: "${{ inputs.STEM }}-${{ matrix.os }}"
          path: ./dist/${{ inputs.STEM }}.*
